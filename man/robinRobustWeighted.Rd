% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ROBINWeighted.R
\name{robinRobustWeighted}
\alias{robinRobustWeighted}
\title{robinRobustWeighted}
\usage{
robinRobustWeighted(
  graph,
  graphRandom,
  method = c("walktrap", "edgeBetweenness", "fastGreedy", "louvain", "spinglass",
    "leadingEigen", "labelProp", "infomap", "optimal", "leiden", "other"),
  FUN = NULL,
  measure = c("vi", "nmi", "split.join", "adjusted.rand"),
  ...,
  distrib = "NegBinom",
  verbose = TRUE
)
}
\arguments{
\item{graph}{The output of prepGraph.}

\item{graphRandom}{The output of random function.}

\item{method}{The clustering method, one of "walktrap", "edgeBetweenness",
"fastGreedy", "louvain", "spinglass", "leadingEigen", "labelProp", "infomap",
"leiden","optimal".}

\item{FUN}{in case the @method parameter is "other" there is the possibility
to use a personal function passing its name through this parameter.
The personal parameter has to take as input the @graph and the @weights
(that can be NULL), and has to return a community object.}

\item{measure}{The stability measure, one of "vi", "nmi", "split.join",
"adjusted.rand" all normalized and used as distances.
"nmi" refers to 1- nmi and "adjusted.ran" refers to 1-adjusted.rand.}

\item{distrib}{Option to rewire in a manner that retains overall graph weight 
regardless of distribution of edge weights. This option is invoked by putting 
any text into this field. Defaults to "NegBinom" for negative binomial.}

\item{verbose}{flag for verbose output (default as TRUE).}

\item{weights}{this argument is not settable for "infomap" method.}

\item{steps}{this argument is settable only for "leadingEigen"and"walktrap"
method.}

\item{spins}{This argument is settable only for "infomap" method.}

\item{e.weights}{This argument is settable only for "infomap" method.}

\item{v.weights}{This argument is settable only for "infomap" method.}

\item{nb.trials}{This argument is settable only for "infomap" method.}

\item{directed}{This argument is settable only for "edgeBetweenness" method.}

\item{objective_function}{Whether to use the Constant Potts Model (CPM) or 
modularity. Must be either "CPM" or "modularity".}

\item{n_iterations}{the number of iterations to iterate the Leiden algorithm. 
Each iteration may improve the partition further.This argument is settable 
only for "leiden".}

\item{resolution}{only for "louvain" and "leiden". Optional resolution 
parameter, lower values typically yield fewer, larger clusters (default=1).}
}
\value{
A list object with two matrices:
- the matrix "Mean" with the means of the procedure for the graph
- the matrix "MeanRandom" with the means of the procedure for the random graph.
}
\description{
This functions implements a procedure to examine the stability
of the partition recovered by some algorithm against random perturbations
of the original graph structure for weighted network.
}
\examples{
my_file <- system.file("example/football.gml", package="robin")
graph <- prepGraph(file=my_file, file.format="gml")
E(graph)$weight <- round(runif(ecount(graph),min=1,max=10))
graphRandom <- randomWeight(graph=graph)
robinRobustWeighted(graph=graph, graphRandom=graphRandom,
    method="louvain", measure="vi")
}
